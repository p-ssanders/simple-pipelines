---
resources:
- name: configuration
  type: git
  source:
    uri: ((config-repo))
    private_key: ((git-deploy-key.private_key))
    branch: master

- name: platform-automation-tasks
  type: s3
  source:
    access_key_id: ((access_key_id))
    secret_access_key: ((secret_access_key))
    region: ((region))
    bucket: ((platform-automation-bucket))
    regexp: platform-automation/platform-automation-tasks-(.*).zip

- name: platform-automation-image
  type: s3
  source:
    access_key_id: ((access_key_id))
    secret_access_key: ((secret_access_key))
    region: ((region))
    bucket: ((platform-automation-bucket))
    regexp: platform-automation/platform-automation-image-(.*).tgz

- name: ops-manager-backup
  type: s3
  source:
    access_key_id: ((access_key_id))
    secret_access_key: ((secret_access_key))
    region: ((region))
    bucket: ((ops-manager-bucket))
    regexp: ops-manager/installation-(.*).zip

jobs:
- name: install-ops-manager
  plan:
    - aggregate:
      - get: platform-automation-tasks
        params:
          unpack: true
      - get: platform-automation-image
        params:
          unpack: true
      - get: configuration
    - task: credhub-interpolate
      image: platform-automation-image
      file: platform-automation-tasks/tasks/credhub-interpolate.yml
      params:
        CREDHUB_CLIENT: ((credhub-client))
        CREDHUB_SECRET: ((credhub-secret))
        CREDHUB_SERVER: ((credhub-server))
        CREDHUB_CA_CERT: ((lets_encrypt_cert.ca))
        PREFIX: /concourse/main/sandbox
        INTERPOLATION_PATHS: sandbox/install-ops-manager-pipeline
      input_mapping:
        files: configuration
      output_mapping:
        interpolated-files: interpolated-config
    - task: download-product
      image: platform-automation-image
      file: platform-automation-tasks/tasks/download-product.yml
      params:
        CONFIG_FILE: sandbox/install-ops-manager-pipeline/download-ops-manager.yml
      input_mapping:
        config: interpolated-config
    - task: create-vm
      image: platform-automation-image
      file: platform-automation-tasks/tasks/create-vm.yml
      params:
        OPSMAN_CONFIG_FILE: sandbox/install-ops-manager-pipeline/configure-ops-manager.yml
        STATE_FILE: sandbox/state.yml
      input_mapping:
        image: downloaded-product
        config: interpolated-config
        state: interpolated-config
      ensure:
        do:
          - task: make-commit
            image: platform-automation-image
            file: platform-automation-tasks/tasks/make-git-commit.yml
            input_mapping:
              repository: configuration
              file-source: generated-state
            output_mapping:
              repository-commit: configuration-commit
            params:
              FILE_SOURCE_PATH: state.yml
              FILE_DESTINATION_PATH: sandbox/state.yml
              GIT_AUTHOR_EMAIL: ((git-author-email))
              GIT_AUTHOR_NAME: ((git-author-name))
              COMMIT_MESSAGE: "update ops manager state file"
          - put: configuration
            params:
              repository: configuration-commit
              merge: true
    - task: configure-authentication
      image: platform-automation-image
      file: platform-automation-tasks/tasks/configure-authentication.yml
      params:
        ENV_FILE: sandbox/env.yml
        AUTH_CONFIG_FILE: sandbox/install-ops-manager-pipeline/auth.yml
      input_mapping:
        env: interpolated-config
        config: interpolated-config
    - task: configure-tls
      image: platform-automation-image
      params:
        ENV_FILE: sandbox/env.yml
        CERTIFICATE_PEM: |
          ((lets_encrypt_cert.certificate))
          ((lets_encrypt_cert.ca))
        PRIVATE_KEY_PEM: ((lets_encrypt_cert.private_key))
      input_mapping:
        env: interpolated-config
      config:
        platform: linux
        inputs:
        - name: env
        run:
          path: bash
          args:
            - "-c"
            - |
              om --env env/"${ENV_FILE}" update-ssl-certificate \
              --certificate-pem "$CERTIFICATE_PEM" \
              --private-key-pem "$PRIVATE_KEY_PEM"
    - task: configure-bosh-director
      image: platform-automation-image
      file: platform-automation-tasks/tasks/configure-director.yml
      params:
        ENV_FILE: sandbox/env.yml
        DIRECTOR_CONFIG_FILE: sandbox/install-ops-manager-pipeline/bosh-director.yml
        VARS_FILES: vars/sandbox/install-ops-manager-pipeline/bosh-director-vars.yml
      input_mapping:
        env: interpolated-config
        config: interpolated-config
        vars: interpolated-config
    - task: apply-director-changes
      image: platform-automation-image
      file: platform-automation-tasks/tasks/apply-director-changes.yml
      params:
        ENV_FILE: sandbox/env.yml
      input_mapping:
        env: interpolated-config

- name: backup-ops-manager
  plan:
    - aggregate:
      - get: platform-automation-tasks
        params:
          unpack: true
      - get: platform-automation-image
        params:
          unpack: true
      - get: configuration
        passed:
        - install-ops-manager
    - task: credhub-interpolate
      image: platform-automation-image
      file: platform-automation-tasks/tasks/credhub-interpolate.yml
      params:
        CREDHUB_CLIENT: ((credhub-client))
        CREDHUB_SECRET: ((credhub-secret))
        CREDHUB_SERVER: ((credhub-server))
        CREDHUB_CA_CERT: ((lets_encrypt_cert.ca))
        PREFIX: /concourse/main/sandbox
        INTERPOLATION_PATHS: sandbox/install-ops-manager-pipeline
      input_mapping:
        files: configuration
      output_mapping:
        interpolated-files: interpolated-config
    - task: backup-ops-manager
      image: platform-automation-image
      file: platform-automation-tasks/tasks/export-installation.yml
      params:
        ENV_FILE: sandbox/env.yml
        INSTALLATION_FILE: installation-$timestamp.zip
      input_mapping:
        env: interpolated-config
    - put: ops-manager-backup
      params:
        file: installation/installation-*.zip
